<Page
    x:Class="MicaDemo.Pages.MicaPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:control="using:MicaDemo.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:MicaDemo.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:media="using:MicaForUWP.Media"
    DataContext="{x:Bind Provider}"
    Loaded="Page_Loaded"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d">
    <Page.Background>
        <ImageBrush ImageSource="{x:Bind Provider.BackgroundImage, Mode=OneWay}" Stretch="UniformToFill" />
    </Page.Background>
    <Grid
        x:Name="RootGrid"
        Margin="-48"
        Padding="48"
        DoubleTapped="Grid_DoubleTapped">
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition />
            </TransitionCollection>
        </Grid.ChildrenTransitions>
        <Grid.Background>
            <media:BackdropMicaBrush
                x:Name="BackdropBrush"
                AlwaysUseFallback="{Binding IsChecked, ElementName=AlwaysUseFallback, Mode=OneWay}"
                Amount="{x:Bind Amount.Value, Mode=OneWay}"
                BackgroundSource="{x:Bind Provider.SelectSource, Mode=OneWay}"
                FallbackColor="{Binding TintColor, RelativeSource={RelativeSource Mode=Self}}"
                LuminosityOpacity="{x:Bind LuminosityOpacity.Value, Mode=OneWay}"
                TintColor="{x:Bind TintColor.Color, Mode=OneWay}"
                TintOpacity="{x:Bind TintOpacity.Value, Mode=OneWay}" />
        </Grid.Background>
        <helpers:UIElementHelper.ContextFlyout>
            <MenuFlyout>
                <MenuFlyoutItem
                    Click="Button_Click"
                    Tag="ChangeTheme"
                    Text="Change Theme">
                    <helpers:UIElementHelper.Icon>
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE771;" />
                    </helpers:UIElementHelper.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem
                    Click="Button_Click"
                    Tag="HideSetting"
                    Text="Hide Setting"
                    Visibility="{x:Bind Provider.IsHideCard, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter='true', Mode=OneWay}">
                    <helpers:UIElementHelper.Icon>
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE9A9;" />
                    </helpers:UIElementHelper.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem
                    Click="Button_Click"
                    Tag="ShowSetting"
                    Text="Show Setting"
                    Visibility="{x:Bind Provider.IsHideCard, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
                    <helpers:UIElementHelper.Icon>
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE890;" />
                    </helpers:UIElementHelper.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutSubItem Text="Backgroud Image">
                    <helpers:UIElementHelper.Icon>
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xEB9F;" />
                    </helpers:UIElementHelper.Icon>
                    <MenuFlyoutItem
                        Click="Button_Click"
                        Tag="ChangeImage"
                        Text="Change Backgroud Image">
                        <helpers:UIElementHelper.Icon>
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE8AB;" />
                        </helpers:UIElementHelper.Icon>
                    </MenuFlyoutItem>
                    <MenuFlyoutItem
                        Click="Button_Click"
                        Tag="RemoveImage"
                        Text="Remove Backgroud Image">
                        <helpers:UIElementHelper.Icon>
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE74D;" />
                        </helpers:UIElementHelper.Icon>
                    </MenuFlyoutItem>
                </MenuFlyoutSubItem>
                <MenuFlyoutSubItem Text="Open New Window">
                    <helpers:UIElementHelper.Icon>
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE78B;" />
                    </helpers:UIElementHelper.Icon>
                    <MenuFlyoutItem
                        Click="Button_Click"
                        Tag="NewWindow"
                        Text="Core Window">
                        <helpers:UIElementHelper.Icon>
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE737;" />
                        </helpers:UIElementHelper.Icon>
                    </MenuFlyoutItem>
                    <MenuFlyoutItem
                        Click="Button_Click"
                        IsEnabled="{x:Bind Provider.IsAppWindowSupported}"
                        Tag="NewAppWindow"
                        Text="App Window">
                        <helpers:UIElementHelper.Icon>
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE737;" />
                        </helpers:UIElementHelper.Icon>
                    </MenuFlyoutItem>
                </MenuFlyoutSubItem>
            </MenuFlyout>
        </helpers:UIElementHelper.ContextFlyout>
        <Border
            x:Name="CardBorder"
            Margin="{x:Bind Provider.ScrollViewerMargin}"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            helpers:UIElementHelper.BackgroundTransition="True"
            Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
            BorderBrush="{ThemeResource CardBorderBrush}"
            BorderThickness="{ThemeResource CardBorderThickness}"
            CornerRadius="8">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <control:TitleBar
                    x:Name="TitleBar"
                    Title="Mica"
                    Grid.Row="0"
                    Margin="8"
                    BackButtonVisibility="Visible"
                    BackRequested="TitleBar_BackRequested"
                    BackgroundVisibility="Collapsed"
                    RefreshButtonVisibility="Collapsed">
                    <ScrollViewer
                        HorizontalScrollBarVisibility="Hidden"
                        HorizontalScrollMode="Auto"
                        VerticalScrollBarVisibility="Disabled"
                        VerticalScrollMode="Disabled">
                        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                            <Button
                                HorizontalAlignment="Stretch"
                                Click="Button_Click"
                                Content="&#xE9A9;"
                                Style="{StaticResource IconButtonStyle}"
                                Tag="HideSetting"
                                ToolTipService.ToolTip="Hide Setting" />
                            <Button
                                HorizontalAlignment="Stretch"
                                Click="Button_Click"
                                Content="&#xE771;"
                                Style="{StaticResource IconButtonStyle}"
                                Tag="ChangeTheme"
                                ToolTipService.ToolTip="Change Theme" />
                            <Button
                                HorizontalAlignment="Stretch"
                                Click="Button_Click"
                                Content="&#xEB9F;"
                                Style="{StaticResource IconButtonStyle}"
                                Tag="ChangeImage"
                                ToolTipService.ToolTip="Change Backgroud Image">
                                <helpers:UIElementHelper.ContextFlyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem
                                            Click="Button_Click"
                                            Tag="RemoveImage"
                                            Text="Remove Backgroud Image">
                                            <helpers:UIElementHelper.Icon>
                                                <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE74D;" />
                                            </helpers:UIElementHelper.Icon>
                                        </MenuFlyoutItem>
                                    </MenuFlyout>
                                </helpers:UIElementHelper.ContextFlyout>
                            </Button>
                            <ToggleButton
                                HorizontalAlignment="Stretch"
                                Content="&#xE744;"
                                IsChecked="{Binding IsCompactOverlay, Mode=TwoWay}"
                                Style="{StaticResource IconToggleButtonStyle}"
                                ToolTipService.ToolTip="Compact Overlay"
                                Visibility="{x:Bind Provider.IsSupportCompactOverlay, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" />
                            <Button
                                Grid.Column="4"
                                VerticalAlignment="Center"
                                Click="Button_Click"
                                Content="&#xE78B;"
                                Style="{StaticResource IconButtonStyle}"
                                Tag="NewWindow"
                                ToolTipService.ToolTip="Open New Window">
                                <helpers:UIElementHelper.ContextFlyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem
                                            Click="Button_Click"
                                            IsEnabled="{x:Bind Provider.IsAppWindowSupported}"
                                            Tag="NewAppWindow"
                                            Text="Open New App Window">
                                            <helpers:UIElementHelper.Icon>
                                                <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE78B;" />
                                            </helpers:UIElementHelper.Icon>
                                        </MenuFlyoutItem>
                                    </MenuFlyout>
                                </helpers:UIElementHelper.ContextFlyout>
                            </Button>
                        </StackPanel>
                    </ScrollViewer>
                </control:TitleBar>
                <ScrollViewer Grid.Row="1">
                    <StackPanel Padding="18,0,18,8">
                        <Slider
                            x:Name="TintOpacity"
                            Header="TintOpacity"
                            Maximum="1"
                            SmallChange="0.001"
                            StepFrequency="0.001"
                            Value="0.8" />
                        <Slider
                            x:Name="LuminosityOpacity"
                            Header="LuminosityOpacity"
                            Maximum="1"
                            SmallChange="0.001"
                            StepFrequency="0.001"
                            Value="1" />
                        <Slider
                            x:Name="Amount"
                            Header="Amount"
                            Maximum="100"
                            Value="0" />
                        <ComboBox
                            x:Name="BackgroundSource"
                            HorizontalAlignment="Stretch"
                            Header="BackgroundSource"
                            SelectedIndex="{x:Bind Provider.SelectIndex, Mode=TwoWay}">
                            <ComboBoxItem>HostBackdrop</ComboBoxItem>
                            <ComboBoxItem>Backdrop</ComboBoxItem>
                            <ComboBoxItem>WallpaperBackdrop</ComboBoxItem>
                        </ComboBox>
                        <ToggleButton
                            x:Name="AlwaysUseFallback"
                            Margin="0,4"
                            HorizontalAlignment="Stretch"
                            Content="Always Use Fallback"
                            IsChecked="False" />
                        <TextBlock Margin="0,4" Text="TintColor" />
                        <control:ColorPickerEx x:Name="TintColor" Color="{ThemeResource SolidBackgroundFillColorBase}" />
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </Border>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualStateGroup.Transitions>
                    <VisualTransition From="DisplayCard" To="HideCard">
                        <VisualTransition.Storyboard>
                            <Storyboard>
                                <FadeOutThemeAnimation TargetName="CardBorder" />
                            </Storyboard>
                        </VisualTransition.Storyboard>
                    </VisualTransition>
                    <VisualTransition From="HideCard" To="DisplayCard">
                        <VisualTransition.Storyboard>
                            <Storyboard>
                                <FadeInThemeAnimation TargetName="CardBorder" />
                            </Storyboard>
                        </VisualTransition.Storyboard>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="DisplayCard">
                    <VisualState.Setters>
                        <Setter Target="CardBorder.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="HideCard">
                    <VisualState.Setters>
                        <Setter Target="CardBorder.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
